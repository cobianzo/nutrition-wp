{"version":3,"file":"dieta-rules.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACgE;AACnB;AACe;AACV;AACJ;AACK;AAAA;AAEnD,MAAMS,gBAAgB,GAAG,CACvB,YAAY,EACZ,gBAAgB,EAChB,qBAAqB,CACtB;AAED,MAAMC,aAAa,GAAG,CACpB,YAAY,EACZ,gBAAgB,EAChB,cAAc,EACd,qBAAqB,CACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGX,8EAA0B,CAAEY,SAAS,IAAK;EAC/D,OAAQC,KAAK,IAAK;IAChB;IACA,MAAMC,WAAW,GAAGT,uDAAM,CAAC,mBAAmB,CAAC,CAACU,oBAAoB,CAClEF,KAAK,CAACG,QACR,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGZ,uDAAM,CAAC,aAAa,CAAC,CAACa,sBAAsB,CAAC,MAAM,CAAC;IACrEC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,kCAAkC,EAAEH,QAAQ,CAAC,CAAC,CAAC;IAC3E,IAAIA,QAAQ,KAAK,MAAM,EAAE;MACvB;MACAE,OAAO,CAACC,GAAG,CAAC,IAAI,GAAGP,KAAK,CAACQ,IAAI,EAAE,kCAAkC,CAAC;MAClE,IAAI,CAACP,WAAW,IAAI,CAACL,gBAAgB,CAACa,QAAQ,CAACT,KAAK,CAACQ,IAAI,CAAC,EAAE;QAC1Df,yDAAQ,CAAC,cAAc,CAAC,CAACiB,iBAAiB,CACxC,iDAAiD,EACjD;UAAEC,EAAE,EAAE;QAA0B,CAClC,CAAC;QAED,OAAO,IAAI;MACb;IACF;IAEA,oBAAOhB,sDAAA,CAACI,SAAS;MAAA,GAAKC;IAAK,CAAG,CAAC;EACjC,CAAC;AACH,CAAC,EAAE,gBAAgB,CAAC;;AAEpB;AACAZ,2DAAS,CAAC,kBAAkB,EAAE,wBAAwB,EAAEU,cAAc,CAAC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACAQ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;AACvB,MAAMK,wBAAwB,GAAGA,CAACC,QAAQ,EAAEL,IAAI,KAAK;EACnD,MAAMJ,QAAQ,GAAGZ,uDAAM,CAAC,aAAa,CAAC,CAACsB,kBAAkB,CAAC,CAAC;EAE3D,IAAIV,QAAQ,KAAK,MAAM,IAAI,CAACP,aAAa,CAACY,QAAQ,CAACD,IAAI,CAAC,EAAE;IACxD,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,OAAOK,QAAQ;AACjB,CAAC;;AAED;AACAzB,2DAAS,CACP,0BAA0B,EAC1B,+BAA+B,EAC/BwB,wBACF,CAAC,C","sources":["webpack://nutrition-child/external window \"ReactJSXRuntime\"","webpack://nutrition-child/external window [\"wp\",\"blockEditor\"]","webpack://nutrition-child/external window [\"wp\",\"components\"]","webpack://nutrition-child/external window [\"wp\",\"compose\"]","webpack://nutrition-child/external window [\"wp\",\"data\"]","webpack://nutrition-child/external window [\"wp\",\"element\"]","webpack://nutrition-child/external window [\"wp\",\"hooks\"]","webpack://nutrition-child/webpack/bootstrap","webpack://nutrition-child/webpack/runtime/compat get default export","webpack://nutrition-child/webpack/runtime/define property getters","webpack://nutrition-child/webpack/runtime/hasOwnProperty shorthand","webpack://nutrition-child/webpack/runtime/make namespace object","webpack://nutrition-child/./gutenberg/dieta-rules.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Import necessary WordPress packages\nimport { createHigherOrderComponent } from \"@wordpress/compose\";\nimport { addFilter } from \"@wordpress/hooks\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody } from \"@wordpress/components\";\nimport { Fragment } from \"@wordpress/element\";\nimport { select, dispatch } from \"@wordpress/data\";\n\nconst allowedTopBlocks = [\n  \"core/group\",\n  \"core/paragraph\",\n  \"asim/alimento-block\",\n];\n\nconst allowedBlocks = [\n  \"core/group\",\n  \"core/paragraph\",\n  \"core/heading\",\n  \"asim/alimento-block\",\n];\n/**\n * FILTER 1: For `diet`, at the top level accept only core/group blocks.\n * @param {*} allowedBlocks\n * @param {*} blockEditor\n * @returns\n */\nconst restrictBlocks = createHigherOrderComponent((BlockEdit) => {\n  return (props) => {\n    // Check if the block has a parent (i.e., it's nested)\n    const parentBlock = select(\"core/block-editor\").getBlockRootClientId(\n      props.clientId\n    );\n\n    // Apply restrictions only if the post type is 'diet'\n    const postType = select(\"core/editor\").getEditedPostAttribute(\"type\");\n    console.log(\"%c postType \", \"background: #222; color: #bada55\", postType); // todelete\n    if (postType === \"diet\") {\n      // Only allow `core/group` block at the root level\n      console.log(\"%c\" + props.name, \"background: #222; color: #bada55\");\n      if (!parentBlock && !allowedTopBlocks.includes(props.name)) {\n        dispatch(\"core/notices\").createErrorNotice(\n          \"Only Group blocks are allowed at the top level.\",\n          { id: \"group-block-restriction\" }\n        );\n\n        return null;\n      }\n    }\n\n    return <BlockEdit {...props} />;\n  };\n}, \"restrictBlocks\");\n\n// Add filter to apply the component\naddFilter(\"editor.BlockEdit\", \"custom/restrict-blocks\", restrictBlocks);\n\n/**\n * FILTER 2: restring blocks for `diet` to paragraph, group and headings.\n * @param {*} allowedBlocks\n * @param {*} blockEditor\n * @returns\n */\n// Function to unregister blocks that are not in the allowedBlocks array\nconsole.log(\"TODELEEL\");\nconst restrictBlocksForDietCPT = (settings, name) => {\n  const postType = select(\"core/editor\").getCurrentPostType();\n\n  if (postType === \"diet\" && !allowedBlocks.includes(name)) {\n    return null; // Unregister the block by returning null\n  }\n\n  return settings;\n};\n\n// Apply the filter to restrict blocks for the 'diet' CPT\naddFilter(\n  \"blocks.registerBlockType\",\n  \"asim/restrict-blocks-diet-cpt\",\n  restrictBlocksForDietCPT\n);\n"],"names":["createHigherOrderComponent","addFilter","InspectorControls","PanelBody","Fragment","select","dispatch","jsx","_jsx","allowedTopBlocks","allowedBlocks","restrictBlocks","BlockEdit","props","parentBlock","getBlockRootClientId","clientId","postType","getEditedPostAttribute","console","log","name","includes","createErrorNotice","id","restrictBlocksForDietCPT","settings","getCurrentPostType"],"sourceRoot":""}