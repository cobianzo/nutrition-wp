{"version":3,"file":"alimento-block.js","mappings":"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","sources":["webpack://nutrition-child/./gutenberg/alimento-block/edit.js","webpack://nutrition-child/./gutenberg/component-MealTypeSelectControl.js","webpack://nutrition-child/./gutenberg/helper-get-meals.js","webpack://nutrition-child/external window \"ReactJSXRuntime\"","webpack://nutrition-child/external window [\"wp\",\"apiFetch\"]","webpack://nutrition-child/external window [\"wp\",\"blockEditor\"]","webpack://nutrition-child/external window [\"wp\",\"blocks\"]","webpack://nutrition-child/external window [\"wp\",\"components\"]","webpack://nutrition-child/external window [\"wp\",\"data\"]","webpack://nutrition-child/external window [\"wp\",\"element\"]","webpack://nutrition-child/external window [\"wp\",\"i18n\"]","webpack://nutrition-child/webpack/bootstrap","webpack://nutrition-child/webpack/runtime/compat get default export","webpack://nutrition-child/webpack/runtime/define property getters","webpack://nutrition-child/webpack/runtime/hasOwnProperty shorthand","webpack://nutrition-child/webpack/runtime/make namespace object","webpack://nutrition-child/./gutenberg/alimento-block/index.js"],"sourcesContent":["import {\n  InnerBlocks,\n  useBlockProps,\n  InspectorControls,\n  RichText,\n} from \"@wordpress/block-editor\";\n\nimport {\n  PanelBody,\n  SelectControl,\n  Button,\n  RadioControl,\n  CheckboxControl,\n} from \"@wordpress/components\";\n\nimport { parse } from \"@wordpress/blocks\";\nimport { select, useSelect, useDispatch } from \"@wordpress/data\";\nimport { __ } from \"@wordpress/i18n\";\nimport apiFetch from \"@wordpress/api-fetch\";\n\n// import React wrapper dependencies\nimport { useState, useEffect, Fragment } from \"@wordpress/element\";\n\n// Internal dependencies\nimport { useMealsTerms } from \"../helper-get-meals\";\nimport MealTypeSelectControl from \"../component-MealTypeSelectControl\";\n\n/**\n * Functional component for the Edit.js\n * @param {*} props\n * @returns\n */\nexport default function edit(props) {\n  // We'll use it later\n  const { replaceInnerBlocks } = useDispatch(\"core/block-editor\");\n  const mealTerms = useMealsTerms();\n  const mealOptions = mealTerms.map((term) => {\n    return { label: term.name, value: term.slug };\n  });\n\n  // helper to update the attribute.imgSrc when alimentoID changes.\n  const fetchImage = async () => {\n    const fetchPost = async () => {\n      const data = await apiFetch({\n        path: `/wp/v2/aliment/${props.attributes.alimentoID}`,\n      });\n      return data;\n    };\n    const postData = await fetchPost();\n    if (postData?.featured_media) {\n      // featured_media is the ID of the attachment. We grab the media src.\n      // NOTE: I tried using `select` but for some reasonit doesnt work.\n      apiFetch({ path: `/wp/v2/media/${postData.featured_media}` }).then(\n        (attachmentPost) => {\n          if (\n            attachmentPost &&\n            attachmentPost.media_details &&\n            attachmentPost.media_details.sizes\n          ) {\n            const imageSource =\n              attachmentPost.media_details.sizes.full.source_url;\n            console.log(imageSource);\n            props.setAttributes({ imgSrc: imageSource });\n          }\n        }\n      );\n    }\n  };\n\n  // Get all Aliments CPT and convert them into Options for the Dropdown\n  const aliments = useSelect((select) => {\n    const alimenti = select(\"core\").getEntityRecords(\"postType\", \"aliment\");\n    if (alimenti) {\n      return alimenti.map((aliment) => {\n        return { label: aliment.title.raw, value: aliment.id };\n      });\n    } else {\n      return [];\n    }\n  }, []);\n\n  useEffect(() => {\n    // keep attr imgSrc Up to date.\n    if (props.attributes.alimentoID) {\n      fetchImage();\n    } else {\n      props.setAttributes({ imgSrc: \"\" }); // TODO : use default?\n    }\n\n    // Replace the content text with the default one for the aliment.\n    if (props.attributes.alimentoID) {\n      const innerBlocks = select(\"core/block-editor\").getBlock(\n        props.clientId\n      ).innerBlocks;\n\n      const innerBlockContent = innerBlocks.map((block) => {\n        return block.innerBlocks.map((innerBlock) => {\n          return innerBlock.attributes.content;\n        });\n      });\n      // if the inner blocks are empty, we replace them with the default aliment content\n      if (innerBlockContent.every((content) => content.length === 0)) {\n        prefillInnerBlocks();\n      }\n    }\n  }, [props.attributes.alimentoID]);\n\n  // create a function that grabs the editor content for the current attr alimentoID.\n  // And it replaces the inner blocks with the content of the editor\n  const prefillInnerBlocks = () => {\n    apiFetch({\n      path: `/wp/v2/aliment/${props.attributes.alimentoID}?context=edit`,\n    }).then((json) => {\n      if (json && json.content && json.content.raw) {\n        const content = json.content.raw;\n        const blocks = parse(content);\n        // console.log(blocks);\n        replaceInnerBlocks(props.clientId, blocks);\n      }\n    });\n  };\n\n  return (\n    <div\n      {...useBlockProps({\n        className:\n          (props.attributes.imgSrc && props.attributes.hideImage !== true\n            ? ` has-image `\n            : ` no-image `) +\n          ` is-${props.attributes.mealType}` +\n          (props.attributes.isAlternative ? ` is-alternative` : ``),\n      })}\n    >\n      <InspectorControls>\n        <PanelBody title={__(\"Select aliment\", \"asim\")}>\n          <MealTypeSelectControl\n            label={__(\"ALIMENT\", \"asim\")}\n            value={props.attributes.alimentoID}\n            mealType={props.attributes.mealType}\n            onChange={(value) => {\n              props.setAttributes({\n                alimentoID: String(value),\n              });\n            }}\n          />\n          <Button\n            isPrimary\n            onClick={() => {\n              console.log(\"You clicked the button!\");\n              // Here we can add the logic to alter the block attributes\n              prefillInnerBlocks();\n            }}\n          >\n            {__(\"Prefill text with defaults\", \"asim\")}\n          </Button>\n          <br />\n          <br />\n          <div>\n            {\n              <RadioControl\n                label={__(\"Meal\", \"asim\")}\n                selected={props.attributes.mealType}\n                options={[\n                  { label: __(\"--none---\", \"asim\"), value: \"\" },\n                  ...mealOptions,\n                ]}\n                onChange={(value) => {\n                  let translated = props.attributes.title;\n                  if (!props.attributes.isAlternative) {\n                    const label = mealOptions.find(\n                      (meal) => meal.value === value\n                    ).label;\n                    translated = __(label, \"asim\");\n                  }\n                  props.setAttributes({\n                    mealType: value,\n                    title: translated,\n                  });\n                }}\n              />\n            }\n          </div>\n          <div>\n            <CheckboxControl\n              label={__(\"Is Alternative?\", \"asim\")}\n              checked={props.attributes.isAlternative}\n              onChange={(value) => {\n                let newTitle = \"\";\n                if (value === true) {\n                  newTitle = __(\"Alternative\", \"asim\");\n                } else {\n                  const labelable = mealOptions.find(\n                    (meal) => meal.value === props.attributes.mealType\n                  );\n                  newTitle = __(\n                    labelable && labelable.label ? labelable.label : \"\",\n                    \"asim\"\n                  );\n                }\n\n                props.setAttributes({\n                  isAlternative: value,\n                  title: newTitle,\n                });\n              }}\n            />\n          </div>\n          <div>\n            <CheckboxControl\n              label={__(\"Hide Image\", \"asim\")}\n              checked={props.attributes.hideImage}\n              onChange={(value) => {\n                props.setAttributes({\n                  hideImage: value,\n                });\n              }}\n            />\n          </div>\n        </PanelBody>\n      </InspectorControls>\n      <Fragment>\n        <RichText\n          tagName=\"h3\"\n          className=\"alimento-title\"\n          value={props.attributes.title}\n          placeholder={__(\"eg. Breakfast\", \"asim\")}\n          disabled={props.attributes.isAlternative}\n          onChange={(value) => {\n            props.setAttributes({ title: value });\n          }}\n        />\n        <div className=\"alimento-left-column\">\n          <InnerBlocks\n            allowedBlocks={[\"core/paragraph\", \"core/heading\", \"core/list\"]}\n            orientation=\"vertical\"\n            template={[\n              [\"core/paragraph\"],\n              [\"core/paragraph\"],\n              [\"core/paragraph\"],\n            ]}\n            onChange={(content) => setAttributes({ textContent: content })}\n          />\n        </div>\n        {props.attributes.hideImage !== true && (\n          <div className=\"alimento-right-column\">\n            {props.attributes.alimentoID && (\n              <div className=\"alimento-image\">\n                <img\n                  src={\n                    props.attributes.imgSrc\n                      ? props.attributes.imgSrc\n                      : \"http://placehold.it/300x300\"\n                  }\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </Fragment>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"@wordpress/element\";\nimport { SelectControl, ComboboxControl, Spinner } from \"@wordpress/components\";\n\nimport apiFetch from \"@wordpress/api-fetch\";\n\n/**\n *\n * @param {{ mealType: string, label: string, onChange: (value: string) => void, value: string }} props\n * @returns\n */\nconst MealTypeSelectControl = ({ mealType, ...props }) => {\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    const getTermID = async (slug) => {\n      try {\n        const terms = await apiFetch({\n          path: `/wp/v2/meal?slug=${slug}&_fields=id`,\n        });\n\n        if (terms.length > 0) {\n          return terms[0].id; // Return the ID of the first term found\n        } else {\n          console.log(\"No term found with that slug.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching term:\", error);\n      }\n    };\n\n    const fetchPosts = async () => {\n      try {\n        const mealTermID = await getTermID(mealType);\n        const posts = await apiFetch({\n          path: `/wp/v2/aliment?meal=${mealTermID}&_fields=id,title.rendered`,\n        });\n\n        const formattedOptions = posts.map((post) => ({\n          label: new DOMParser().parseFromString(\n            post.title.rendered,\n            \"text/html\"\n          ).documentElement.textContent,\n          value: String(post.id),\n        }));\n\n        setOptions(formattedOptions);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    if (mealType) {\n      fetchPosts();\n    }\n  }, [mealType]);\n\n  if (!mealType) return <p>Select a meal type</p>;\n  return options.length ? (\n    <ComboboxControl {...props} options={options} />\n  ) : (\n    <>\n      <h4>{props.label ?? \"Loading...\"}</h4>\n      <Spinner />\n      <br />\n      <br />\n    </>\n  );\n};\n\nexport default MealTypeSelectControl;\n","// useMealsTerms.js\nimport { useState, useEffect } from \"@wordpress/element\";\nimport apiFetch from \"@wordpress/api-fetch\";\n\nexport function useMealsTerms() {\n  const [terms, setTerms] = useState([]);\n\n  useEffect(() => {\n    // Fetch terms for the 'meal' taxonomy\n    apiFetch({ path: \"/wp/v2/meal?orderby=id&order=desc\" })\n      .then((data) => {\n        setTerms(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching terms:\", error);\n      });\n  }, []); // Empty dependency array means this runs once on mount\n\n  return terms;\n}\n","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { useBlockProps } from \"@wordpress/block-editor\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\n\n// import { addFilter } from \"@wordpress/hooks\";\n// import { getBlockType } from \"@wordpress/blocks\";\n// import { createElement } from \"@wordpress/element\";\n\nimport Edit from \"./edit\";\nregisterBlockType(\"asim/alimento-block\", {\n  title: __(\"Alimento Block\", \"asim\"),\n  edit: Edit,\n  save: function ({ attributes }) {\n    const blockProps = useBlockProps.save();\n\n    // Use InnerBlocks.Content to render the inner blocks' content\n    return (\n      <div {...blockProps}>\n        <div className=\"alimento-left-column\">\n          <InnerBlocks.Content />\n        </div>\n      </div>\n    );\n  },\n});\n\n// Function to disable the Styles tab\n// @TODELETE: this doesnt work!\n// const disableStylesTab = (BlockEdit) => (props) => {\n//   // Check if the block is the one you want to modify\n//   if (props.name === \"asim/alimento-block\") {\n//     // Remove the Styles tab by deleting the styles from block settings\n//     console.log(\"%c props\", \"background: #222; color: #bada55\", props);\n//     delete getBlockType(props.name).styles;\n//   }\n//   return <BlockEdit {...props} />;\n// };\n\n// // Add the filter to modify the BlockEdit component\n// addFilter(\"editor.BlockEdit\", \"asim/disable-styles-tab\", disableStylesTab);\n"],"names":["InnerBlocks","useBlockProps","InspectorControls","RichText","PanelBody","SelectControl","Button","RadioControl","CheckboxControl","parse","select","useSelect","useDispatch","__","apiFetch","useState","useEffect","Fragment","useMealsTerms","MealTypeSelectControl","jsx","_jsx","jsxs","_jsxs","edit","props","replaceInnerBlocks","mealTerms","mealOptions","map","term","label","name","value","slug","fetchImage","fetchPost","data","path","attributes","alimentoID","postData","featured_media","then","attachmentPost","media_details","sizes","imageSource","full","source_url","console","log","setAttributes","imgSrc","aliments","alimenti","getEntityRecords","aliment","title","raw","id","innerBlocks","getBlock","clientId","innerBlockContent","block","innerBlock","content","every","length","prefillInnerBlocks","json","blocks","className","hideImage","mealType","isAlternative","children","onChange","String","isPrimary","onClick","selected","options","translated","find","meal","checked","newTitle","labelable","tagName","placeholder","disabled","allowedBlocks","orientation","template","textContent","src","ComboboxControl","Spinner","_Fragment","_props$label","setOptions","getTermID","terms","error","fetchPosts","mealTermID","posts","formattedOptions","post","DOMParser","parseFromString","rendered","documentElement","setTerms","catch","registerBlockType","Edit","save","blockProps","Content"],"sourceRoot":""}